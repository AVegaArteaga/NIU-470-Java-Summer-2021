import java.util.Scanner;
import java.io.*;

public class MileRedemptionApp {
    
    public static void printTitle(MileRedeemer mileRedeemer){
        String[] cityNamesArry;
        printLongLine();
        System.out.println("       WELCOME TO THE JAVA AIRLINES MILES REDEMPTION AIR        ");
        printLongLine();
        System.out.println("List of destination cities your client can travel to:\n");
        
        cityNamesArry = mileRedeemer.getCityNames();
        for(int i = 0; i < cityNamesArry.length; i++){
            System.out.println(cityNamesArry[i]);
        }

        printLongLine();
    }

    public static void printLongLine(){
        System.out.println("----------------------------------------------------------------");
    }

    public static boolean ExitApp(){
        Scanner exitApp = new Scanner(System.in); //exit the app
        String strExitApp;

        printLongLine();
        System.out.print("\nDo you want to continue (y/n)? ");
        strExitApp = exitApp.next();
        System.out.println();
        exitApp.close();
        printLongLine();


        return (!strExitApp.equalsIgnoreCase("n"));
    }
    public static void main(String[] args) throws IOException {

        
        MileRedeemer mileRedeemer = new MileRedeemer();
        
        System.out.print("Please Enter the name of the file: ");
        Scanner readFile = new Scanner(System.in); //get the name of the file
        System.out.flush();
        String filename = readFile.next();
        File file = new File(filename);

        Scanner fileScanner = new Scanner(file);
        

        mileRedeemer.readDestinations(fileScanner);


        printTitle(mileRedeemer);


        Scanner enterScanner= new Scanner(System.in);
        int miles;
        int month;
        
        do{
            System.out.print("Please enter your client's accumulated Frequent Flyer Miles: ");
            miles = enterScanner.nextInt();
            System.out.println();
            System.out.print("Please enter your client's month of departure (1-12): ");
            month = enterScanner.nextInt();
            System.out.println();




            System.out.println("Your client's Frequent Flyer Miles can be used to redeem the following tickets:\n");
            
            String[] cityNamesArry;
            cityNamesArry = mileRedeemer.redeemMiles(miles,month);
            for(int i = 0; i < cityNamesArry.length; i++){
                System.out.println(cityNamesArry[i]);
            }

            System.out.println("Your client's remaining Frequent Flyer Miles: " + mileRedeemer.getRemainMiles() + "\n");
            


           
            
        } while (ExitApp());

        enterScanner.close();
        fileScanner.close();
        readFile.close();

    }
}
//                          |off    |Upgrade| Departure
//                   Normal |season |Econ to|
// Name              Mileage|Mileage|First  |
//------------------+-------+-------+-------+----
// Sidney;           50000; | 30000;| 20000;| 5-6 
// Hong Kong;        30000; | 20250;| 17500;| 2-4 
// Hyderabad;        30000; | 20000;| 15000;| 2-4
// Tokyo;            29000; | 16500;| 5350; | 2-5
// Paris;            20000; | 15000;| 10000;| 2-4
// Vienna;           17500; | 12500;| 5000; | 2-4
// Berlin;           17250; | 12750;| 5250; | 3-5
// New York;         10000; |  5000;| 8000; | 10-11
// Washington, D.C.;  9000; |  7500;| 2000; | 10-12



// 49600
// 4

//                          |off    |Upgrade| Departure
//                   Normal |season |Econ to|
// Name              Mileage|Mileage|First  |
//------------------+-------+-------+-------+----
// Sidney;           50000; | 30000;| 20000;| 5-6
// Hong Kong;        30000; | 20250;| 17500;| 2-4
// Hyderabad;        30000; | 20000;| 15000;| 2-4
// Paris;            20000; | 15000;| 10000;| 2-4
// Tokyo;            29000; | 16500;| 5350; | 2-5
// Berlin;           17250; | 12750;| 5250; | 3-5
// Vienna;           17500; | 12500;| 5000; | 2-4
// New York;         10000; |  5000;| 8000; | 10-11
// Washington, D.C.;  9000; |  7500;| 2000; | 10-12




// 49600
// 4

// 20250 + 20000 = 40,250 - 49600 = 9350
// 9350 - 9000 = 350

//                          |off    |Upgrade| Departure
//                   Normal |season |Econ to|
// Name              Mileage|Mileage|First  |
//------------------+-------+-------+-------+----
// Sidney;           50000; | 30000;| 20000;| 5-6   -- 
// Hong Kong;        30000; | 20250;| 17500;| 2-4   ++
// Hyderabad;        30000; | 20000;| 15000;| 2-4   ++ 
// Tokyo;            29000; | 16500;| 5350; | 2-5   ++
// Paris;            20000; | 15000;| 10000;| 2-4   ++
// Vienna;           17500; | 12500;| 5000; | 2-4   ++
// Berlin;           17250; | 12750;| 5250; | 3-5   ++
// New York;         10000; |  5000;| 8000; | 10-11 --
// Washington, D.C.;  9000; |  7500;| 2000; | 10-12 --




// 154351
// 7

//                          |off    |Upgrade| Departure
//                   Normal |season |Econ to|
// Name              Mileage|Mileage|First  |
//------------------+-------+-------+-------+----
// Sidney;           50000; | 30000;| 20000;| 5-6   +
// Hong Kong;        30000; | 20250;| 17500;| 2-4   +
// Hyderabad;        30000; | 20000;| 15000;| 2-4   +
// Tokyo;            29000; | 16500;| 5350; | 2-5   ++
// Paris;            20000; | 15000;| 10000;| 2-4   
// Berlin;           17250; | 12750;| 5250; | 3-5   
// Vienna;           17500; | 12500;| 5000; | 2-4
// New York;         10000; |  5000;| 8000; | 10-11
// Washington, D.C.;  9000; |  7500;| 2000; | 10-12 +

// 154351 - 50000   Sidney
// 104351 - 30000   Hong Kong
// 74351  - 30000   Hyderabad
// 44351  - 29000   Tokyo
// 15351  - 10000   New York
// 5351   - 5350    Tokyo first class

//remainder of 1

